function getQueryVariable(e) { for (var a = window.location.search.substring(1).split("&"), t = 0; t < a.length; t++) { var o = a[t].split("="); if (o[0] === e) return o[1] } return !1 } if (document.all && !window.setTimeout.isPolyfill) { var __nativeST__ = window.setTimeout; window.setTimeout = function (e, a) { var t = Array.prototype.slice.call(arguments, 2); return __nativeST__(e instanceof Function ? function () { e.apply(null, t) } : e, a) }, window.setTimeout.isPolyfill = !0 } if (document.all && !window.setInterval.isPolyfill) { var __nativeSI__ = window.setInterval; window.setInterval = function (e, a) { var t = Array.prototype.slice.call(arguments, 2); return __nativeSI__(e instanceof Function ? function () { e.apply(null, t) } : e, a) }, window.setInterval.isPolyfill = !0 } String.prototype.format || (String.prototype.format = function () { var e = arguments; return this.replace(/{(\d+)}/g, function (a, t) { return void 0 !== e[t] ? e[t] : a }) }); var telemetryObj = function () { var e = {}; return e.logGetTemplate = function (e) { var a = { templateName: e }; window.appInsights.trackEvent("GetLRSTemplate", a), void 0 !== window.mixpanel && window.mixpanel.track("GetLRSTemplate", { properties: this.addMixPanelProperties(a), measurements: null }) }, e.logAuthenticatedUser = function (e) { if (e) { if (void 0 !== window.mixpanel) { var a = e.split("#"); 2 === a.length ? window.mixpanel.alias(a[1]) : window.mixpanel.alias(e) } void 0 !== window.appInsights && window.appInsights.setAuthenticatedUserContext(e, "") } }, e.logPageView = function () { if (void 0 !== window.mixpanel) { var a = getQueryVariable("correlationId"); a && window.mixpanel.identify(a), window.mixpanel.track("LRS Deploy Page Viewed", { page: window.location, properties: e.addMixPanelProperties(null), measurements: null }) } }, e.addMixPanelProperties = function (e) { (e = e || {}).sitename = "functions" }, e.logDeploy = function (a) { var t = { templateName: a }; void 0 !== window.appInsights && window.appInsights.trackEvent("LRSDeployStarted", { templateName: a }), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeployStarted", { page: window.location, properties: e.addMixPanelProperties(t), measurements: null }) }, e.logDeploySucceeded = function (a) { var t = { templateName: a }; void 0 !== window.appInsights && window.appInsights.trackEvent("LRSDeploySucceeded", t), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeploySucceeded", { page: window.location, properties: e.addMixPanelProperties(t), measurements: null }) }, e.logDeployFailed = function (a) { var t = { templateName: a }; void 0 !== window.appInsights && window.appInsights.trackEvent("LRSDeployFailed", t), void 0 !== window.mixpanel && window.mixpanel.track("LRSDeployFailed", { page: window.location, properties: e.addMixPanelProperties(t), measurements: null }) }, e }, constantsObj = function () { var e = {}; return e.params = function () { var e = {}; return e.pollingInterval = 2e3, e.templatePollingInterval = 3e3, e.deployMessage1Interval = 3e4, e.deployMessage2Interval = 6e4, e.deployTimeoutInterval = 75e3, e }(), e }, telemetry = telemetryObj(), constants = constantsObj(); !function () { angular.module("formApp", []).filter("camelCaseToHuman", function () { return function (e) { var a = e.name.charAt(0).toUpperCase() + e.name.substr(1).replace(/[A-Z]/g, " $&"); return "" === e.defaultValue ? a + " (Optional)" : a } }).controller("FormController", ["$window", "$scope", "$location", "$http", "$timeout", function (e, a, t, o, r) { function n(e, a) { e.formData.statusMesgs.indexOf(a) < 0 && e.formData.statusMesgs.push(a) } function i(e, a) { if (a.data.operations && a.data.operations && a.data.operations.value) for (var t = a.data.operations.value, o = t.length - 1; o >= 0; o--) n(e, t[o].properties.targetResource.localizedMessage) } function l(a, t) { var o, r = a.formData.subscription.subscriptionId, n = a.formData.finalResourceGroup; a.formData.portalUrl = f, a.formData.repoParamFound && (o = { appServiceName: a.formData.appServiceName }), t({ method: "get", url: "api/lrsdeployments/" + r + "/rg/" + n.name, params: o }).then(function (o) { i(a, o); var r = o.data.operations, n = null; if (r && r.value) for (var s = 0; s < r.value.length; s++) { var p = r.value[s].properties; p.statusMessage && p.statusMessage.error ? n = p.statusMessage.error.message : "Failed" === p.provisioningState && p.statusMessage && p.statusMessage.message && (n = p.statusMessage.message) } n || "Failed" === o.data.provisioningState || "Succeeded" === o.data.provisioningState ? (a.formData.deploymentSucceeded = "Succeeded" === o.data.provisioningState, a.formData.deploymentSucceeded ? (a.formData.portalUrl = d.format(a.formData.subscription.subscriptionId, a.formData.finalResourceGroup.name, a.formData.appServiceName), telemetry.logDeploySucceeded(a.formData.templateName)) : (a.formData.portalUrl = c.format(a.formData.subscription.subscriptionId, a.formData.finalResourceGroup.name, a.formData.appServiceName), telemetry.logDeployFailed(a.formData.templateName)), e.location.href = a.formData.portalUrl) : window.setTimeout(l, constants.params.pollingInterval, a, t) }, function (t) { a.formData.errorMesg = t.data.error, telemetry.logDeployFailed("getdeploymentstatus"), e.location.href = a.formData.portalUrl }) } function s() { var e = {}, t = a.formData.newResourceGroup; a.formData.finalResourceGroup = t; var o = { name: "appServiceName", value: a.formData.appServiceName }, r = { name: "appServiceLocation", value: a.formData.appServiceLocation }; return e[o.name] = { value: o.value }, t.location = r.value, { parameters: e, subscriptionId: a.formData.subscription.subscriptionId, resourceGroup: t, templateUrl: a.formData.templateNameUrl, repoUrl: sessionStorage.templateName } } function p() { var t = a.formData.subscription.subscriptionId; a.formData.portalUrl = f, a.formData.deploymentSucceeded = !1, telemetry.logDeploy(a.formData.templateName), a.formData.deployPayload = s(a.formData.params), o({ method: "post", url: "api/lrsdeployments/" + t, data: a.formData.deployPayload }).then(function (e) { window.setTimeout(l, constants.params.pollingInterval, a, o) }, function (t) { telemetry.logDeployFailed("postdeployment"), null !== t.data && null !== t.data.error && (a.formData.errorMesg = t.data.error, e.location.href = a.formData.portalUrl) }) } function m() { o({ method: "get", url: "api/lrstemplate", params: { templateName: a.formData.templateName, attempt: a.formData.attempt } }).then(function (e) { document.getElementById("loadingMessage").style.display = "none", n(a, e.data.nextStatusMessage), a.formData.subscription = e.data.subscription, a.formData.tenants = e.data.tenants, a.formData.templateName = e.data.templateName, a.formData.appServiceName = e.data.appServiceName, a.formData.appServiceLocation = e.data.appServiceLocation, a.formData.templateNameUrl = e.data.templateUrl, a.formData.email = e.data.email, a.formData.newResourceGroup = { name: e.data.resourceGroupName, location: "" }, telemetry.logAuthenticatedUser(a.formData.email), a.formData.params = []; var t = u(); t.name = "appserviceName", t.type = "string", t.value = e.data.appServiceName, t.defaultValue = e.data.appServiceName, a.formData.params.push(t), p() }, function (t) { a.formData.errorMesg = t.data.error, t.data && (406 === t.status && (e.location.href = t.data), window.setTimeout(m, constants.params.templatePollingInterval, a, o)) }) } a.deployTimerElapsed = !1, r(function () { a.deployTimerElapsed = !0 }, constants.params.deployTimeoutInterval), r(function () { n(a, document.getElementById("deployingMessage1").innerHTML) }, constants.params.deployMessage1Interval), r(function () { n(a, document.getElementById("deployingMessage2").innerHTML) }, constants.params.deployMessage2Interval), a.formData = {}; var u = function () { var e = {}; return e.name = null, e.type = null, e.defaultValue = null, e.value = null, e }, d = "https://portal.azure.com/#resource/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}/appServices", c = "https://portal.azure.com/#resource/subscriptions/{0}/resourceGroups/{1}/overview", f = "https://portal.azure.com/"; !function (a, t) { a.formData.templateName = getQueryVariable("templateName"); var o = -1; if (o = (parseInt(getQueryVariable("attempt")) || 0) + 1, a.formData.attempt = o, a.formData.statusMesgs = [], n(a, document.getElementById("submittingMessage").innerHTML), telemetry.logPageView(), a.formData.templateName && 0 !== a.formData.templateName.length || sessionStorage.templateName && (a.formData.templateName = sessionStorage.templateName), !a.formData.templateName) return telemetry.logDeployFailed("noTemplateName"), void (e.location.href = "https://portal.azure.com"); sessionStorage.templateName = a.formData.templateName, telemetry.logGetTemplate(a.formData.templateName), a.formData.templateName && 0 !== a.formData.templateName.length && !a.formData.subscriptions && (a.formData.statusMesgs = [], n(a, document.getElementById("submittingMessage").innerHTML), a.formData.attempt <= 3 ? m() : a.formData.attempt > 3 && (telemetry.logDeployFailed("unabletogetsubs"), e.location.href = "https://portal.azure.com")) }(a) }]) }();